{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","services/localStorage.js","index.js"],"names":["ContactForm","state","name","number","handleSubmit","event","preventDefault","props","addContact","reset","handleChange","e","target","value","setState","onSubmit","this","onChange","type","placeholder","pattern","title","required","Component","Filter","filter","ContactList","filterContacts","deleteContact","map","id","onClick","CONTACTS_KEY","App","contacts","checkName","alert","obj","nanoid","prevState","nameValue","some","contact","toLowerCase","includes","savedContacts","key","JSON","parse","localStorage","getItem","error","get","prevProps","setItem","stringify","save","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.526b69e6.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.addContact(this.state);\n    this.reset();\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  reset = () => this.setState({ name: \"\", number: \"\" });\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          onChange={this.handleChange}\n          value={this.state.name}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <input\n          onChange={this.handleChange}\n          value={this.state.number}\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","const Filter = ({ filter, value }) => {\n  return (\n    <input\n      onChange={value}\n      value={filter}\n      type=\"text\"\n      name=\"filter\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      required\n    />\n  );\n};\n\nexport default Filter;\n","const ContactList = ({ filterContacts, deleteContact }) => {\n  return (\n    <ul>\n      {filterContacts().map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <button onClick={() => deleteContact(id)} type=\"button\">\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm.jsx\";\nimport Filter from \"./components/Filter/Filter.jsx\";\nimport ContactList from \"./components/ContactList/ContactList.jsx\";\nimport { nanoid } from \"nanoid\";\nimport { get, save } from \"./services/localStorage\";\n\nconst CONTACTS_KEY = \"contacts\";\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const savedContacts = get(CONTACTS_KEY);\n    if (savedContacts) {\n      this.setState({ contacts: savedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      save(CONTACTS_KEY, contacts);\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const isName = this.checkName(name);\n    if (isName) return alert(`${name} is already in contacts`);\n    const obj = {\n      id: nanoid(5),\n      name,\n      number,\n    };\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, obj],\n      };\n    });\n  };\n\n  checkName = nameValue =>\n    this.state.contacts.some(({ name }) => name === nameValue);\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  filterContacts = () => {\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase())\n    );\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm addContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter filter={this.state.filter} value={this.handleChange} />\n        <ContactList\n          contacts={this.state.contacts}\n          filterContacts={this.filterContacts}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\nconst get = key => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { get, save };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}